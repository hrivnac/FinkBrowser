// Create Index
// (Lomikel schema should be already loaded)
// =========================================

graph.tx().rollback()

mgmt = graph.openManagement()

// Properties
lbl      = mgmt.getPropertyKey('lbl'     )
rowkey   = mgmt.getPropertyKey('rowkey'  )
objectId = mgmt.getPropertyKey('objectId')
jd       = mgmt.getPropertyKey('jd'      )
radec    = mgmt.getPropertyKey('radec'   )
ssnamenr = mgmt.getPropertyKey('ssnamenr')
alert    = mgmt.getVertexLabel('alert'   )

//  Indexes
mgmt.buildIndex('byRowkey',     Vertex.class).addKey(rowkey  )                                  .unique().indexOnly(alert).buildCompositeIndex()
mgmt.buildIndex('byObjectId',   Vertex.class).addKey(objectId)                                           .indexOnly(alert).buildCompositeIndex()
mgmt.buildIndex('byJd',         Vertex.class).addKey(jd)                                                 .indexOnly(alert).buildCompositeIndex()
mgmt.buildIndex('byRaDec',      Vertex.class).addKey(radec)                                              .indexOnly(alert).buildCompositeIndex()
mgmt.buildIndex('bySsnamenr',   Vertex.class).addKey(ssnamenr)                                           .indexOnly(alert).buildCompositeIndex()
mgmt.buildIndex('byRowkeyES',   Vertex.class).addKey(rowkey,   Mapping.TEXTSTRING.asParameter())         .indexOnly(alert).buildMixedIndex('search')
mgmt.buildIndex('byObjectIdES', Vertex.class).addKey(objectId, Mapping.TEXTSTRING.asParameter())         .indexOnly(alert).buildMixedIndex('search')
mgmt.buildIndex('byJdES',       Vertex.class).addKey(jd                                        )         .indexOnly(alert).buildMixedIndex('search')
mgmt.buildIndex('byRaDecES',    Vertex.class).addKey(radec                                     )         .indexOnly(alert).buildMixedIndex('search')
mgmt.buildIndex('bySsnamenrES', Vertex.class).addKey(ssnamenr, Mapping.TEXTSTRING.asParameter())         .indexOnly(alert).buildMixedIndex('search')

mgmt.commit()

// Wait for index
ManagementSystem.awaitGraphIndexStatus(graph, 'byRowkey'    ).status(SchemaStatus.REGISTERED).call()
ManagementSystem.awaitGraphIndexStatus(graph, 'byObjetId'   ).status(SchemaStatus.REGISTERED).call()
ManagementSystem.awaitGraphIndexStatus(graph, 'byJd'        ).status(SchemaStatus.REGISTERED).call()
ManagementSystem.awaitGraphIndexStatus(graph, 'byRaDec'     ).status(SchemaStatus.REGISTERED).call()
ManagementSystem.awaitGraphIndexStatus(graph, 'bySsnamenr'  ).status(SchemaStatus.REGISTERED).call()
ManagementSystem.awaitGraphIndexStatus(graph, 'byRowkeyES'  ).status(SchemaStatus.REGISTERED).call()
ManagementSystem.awaitGraphIndexStatus(graph, 'byObjectIdES').status(SchemaStatus.REGISTERED).call()
ManagementSystem.awaitGraphIndexStatus(graph, 'byJdES'      ).status(SchemaStatus.REGISTERED).call()
ManagementSystem.awaitGraphIndexStatus(graph, 'byRaDecES'   ).status(SchemaStatus.REGISTERED).call()
ManagementSystem.awaitGraphIndexStatus(graph, 'bySsnamenrES').status(SchemaStatus.REGISTERED).call()

// Reindex existing data
mgmt = graph.openManagement()
mgmt.updateIndex(mgmt.getGraphIndex("byRowkey"    ), SchemaAction.REINDEX).get()
mgmt.updateIndex(mgmt.getGraphIndex("byObjectId"  ), SchemaAction.REINDEX).get()
mgmt.updateIndex(mgmt.getGraphIndex("byJd"        ), SchemaAction.REINDEX).get()
mgmt.updateIndex(mgmt.getGraphIndex("byRaDec"     ), SchemaAction.REINDEX).get()
mgmt.updateIndex(mgmt.getGraphIndex("bySsnamenr"  ), SchemaAction.REINDEX).get()
mgmt.updateIndex(mgmt.getGraphIndex("byRowkeyES"  ), SchemaAction.REINDEX).get()
mgmt.updateIndex(mgmt.getGraphIndex("byObjectIdES"), SchemaAction.REINDEX).get()
mgmt.updateIndex(mgmt.getGraphIndex("byJdES"      ), SchemaAction.REINDEX).get()
mgmt.updateIndex(mgmt.getGraphIndex("byRaDecES"   ), SchemaAction.REINDEX).get()
mgmt.updateIndex(mgmt.getGraphIndex("bySsnamenrES"), SchemaAction.REINDEX).get()
mgmt.getGraphIndexes(Vertex.class)
mgmt.commit()

// Enable index
ManagementSystem.awaitGraphIndexStatus(graph, 'byRowkey'    ).status(SchemaStatus.ENABLED).call()
ManagementSystem.awaitGraphIndexStatus(graph, 'byObjectId'  ).status(SchemaStatus.ENABLED).call()
ManagementSystem.awaitGraphIndexStatus(graph, 'byJd'        ).status(SchemaStatus.ENABLED).call()
ManagementSystem.awaitGraphIndexStatus(graph, 'byRaDec'     ).status(SchemaStatus.ENABLED).call()
ManagementSystem.awaitGraphIndexStatus(graph, 'bySsnamenr'  ).status(SchemaStatus.ENABLED).call()
ManagementSystem.awaitGraphIndexStatus(graph, 'byRowkeyES'  ).status(SchemaStatus.ENABLED).call()
ManagementSystem.awaitGraphIndexStatus(graph, 'byObjectIdES').status(SchemaStatus.ENABLED).call()
ManagementSystem.awaitGraphIndexStatus(graph, 'byJdES'      ).status(SchemaStatus.ENABLED).call()
ManagementSystem.awaitGraphIndexStatus(graph, 'byRaDecES'   ).status(SchemaStatus.ENABLED).call()
ManagementSystem.awaitGraphIndexStatus(graph, 'bySsnamenrES').status(SchemaStatus.ENABLED).call()
