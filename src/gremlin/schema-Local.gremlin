// Specification of schema (constrains)
// ====================================

mgmt = graph.openManagement()

// Vertexes
AstroLabNet      = mgmt.makeVertexLabel('AstroLabNet'     ).make()
site             = mgmt.makeVertexLabel('site'            ).make()
AlertsCollection = mgmt.makeVertexLabel('AlertsCollection').make()
alert            = mgmt.makeVertexLabel('alert'           ).make()

// Edges
has      = mgmt.makeEdgeLabel('has'     ).multiplicity(ONE2MANY ).make()
holds    = mgmt.makeEdgeLabel('holds'   ).multiplicity(ONE2MANY ).make()
contains = mgmt.makeEdgeLabel('contains').multiplicity(MULTI    ).make()

// Properties
title  = mgmt.makePropertyKey('title' ).dataType(String.class).cardinality(Cardinality.SINGLE).make()
lbl    = mgmt.makePropertyKey('lbl'   ).dataType(String.class).cardinality(Cardinality.SINGLE).make()
rowkey = mgmt.makePropertyKey('rowkey').dataType(String.class).cardinality(Cardinality.SINGLE).make()

// Vertex properties
mgmt.addProperties(AstroLabNet,
                   lbl,
                   title)
mgmt.addProperties(site,
                   lbl,
                   title)   
mgmt.addProperties(AlertsCollection,
                   lbl,
                   title)   
mgmt.addProperties(alert,
                   lbl,
                   rowkey)   
                                      
// Edge properties
mgmt.addProperties(has,
                   lbl)
mgmt.addProperties(holds,
                   lbl)
mgmt.addProperties(contains,
                   lbl)

// Connections                   
mgmt.addConnection(has,      AstroLabNet,      site)
mgmt.addConnection(holds,    site,             AlertsCollection)
mgmt.addConnection(contains, AlertsCollection, alert)

// Info
mgmt.printSchema()

mgmt.commit()

