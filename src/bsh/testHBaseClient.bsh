// Connect to HBase table
//HBaseClient client = new HBaseClient("localhost", 2181);
HBaseClient client = new HBaseClient("134.158.74.54", 2181);
client.connect("test_portal_tiny.3", "schema_0.7.0_0.3.6");
client.setLimit(100);

// Get two known alerts (two columns) 
results = client.scan("ZTF17aaaaxyd_2458789.0426273,ZTF17aaaajdq_2458789.0297801",
                      null,
                      "i:candid,b:cutoutScience_stampData",
                      0,
                      false,
                      false);
print(client.results2String(results)); 

// Get binary cell
print(client.repository().get("binary:ZTF17aaaaxyd_2458789.0426273:cutoutScience_stampData"));


// Get all alerts with row containing 'xyd' or starting with 'ZTF19aaaiw'
// Available comparators: exact, prefix (default), substring, regex
results = client.scan(null,
                      "key:key:xyd:substring,key:key:ZTF19aaaiw:prefix",
                      "i:candid",
                      0,
                      true,
                      true);
print(client.results2String(results)); 

// Get all alerts with column match
// It only works for string columns, use Evaluator for numerical columns
// Available comparators: exact, prefix, substring (default), regex
results = client.scan(null,
                      "d:cdsxmatch:YSO:exact",
                      "i:candid,d:cdsxmatch",
                      0,
                      true,
                      true);
print(client.results2String(results)); 

// Get timeline dependece of i:dec
results = client.timeline("i:dec");
print(client.results2String(results)); 

// Get all recent (last 100000 minutes) objectIds
results = client.latests("i:objectId",
                         null,
                         100000,
                         true);
print(results); 

// Apply predefined function to filter results
client.setEvaluation("isWithinGeoLimits(80, 85, -4.0, 0.0)", "ra,dec");
results = client.scan(null,
                      null,
                      null,
                      0,
                      false,
                      false);
print(client.results2String(results)); 

// Apply formula to filter results
client.setEvaluation("dec < 10");
results = client.scan(null,
                      null,
                      null,
                      0,
                      false,
                      false);
print(client.results2String(results)); 

client.close();
