// Connect to HBase table
//HBaseClient client = new HBaseClient("localhost", 2181);
HBaseClient client = new HBaseClient("134.158.74.54", 2181);
client.connect("test_portal_tiny.3", "schema_0.7.0_0.3.6");
client.setLimit(100);

// Get two known alerts (just one column) 
// get 'test_portal', 'ZTF19aaoxpad_2458789.034838_152.294655_48.3441663', {COLUMNS => 'i:candid'}
print(client.scan("ZTF17aaaaxyd_2458789.0426273,ZTF17aaaajdq_2458789.0297801",
                  null,
                  "i:candid,b:cutoutScience_stampData",
                  null)); 

// Get binary cell
print(client.repository().get("binary:ZTF17aaaaxyd_2458789.0426273:cutoutScience_stampData"));


// Get all alerts with row starting with 'ZTF19'
// scan 'test_portal', {FILTER => "(PrefixFilter ('ZTF19'))", COLUMNS => 'i:candid', STARTROW => 'ZTF19', LIMIT => 10}
// scan 'test_portal', {ROWPREFIXFILTER => 'ZTF19', COLUMNS => 'i:candid', LIMIT => 10}
print(client.scan(null,
                  "key:key:ZTF19",
                  "i:candid",
                  "10000"));

// Get timeline dependece of i:candid
print(client.timeline("i:candid"));

// Get all recent (last 100000 minutes) objectIds
print(client.latests("i:objectId",
                     null,
                     100000,
                     true));

// Apply formula to filter results
client.setEvaluation("isWithinGeoLimits(80, 85, -4.0, 0.0)", "ra,dec");
//client.setEvaluation("dec < 10");
print(client.scan(null,
                  null,
                  null,
                  null));

client.close();
